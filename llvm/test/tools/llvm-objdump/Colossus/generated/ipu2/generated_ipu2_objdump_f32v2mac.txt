# RUN: llvm-mc %s -filetype=obj  -mattr=+ipu2 | \
# RUN: llvm-objdump -d --mcpu=ipu2 - | FileCheck %s

# This file is auto-generated. Do not edit.
# Generated by GenerateInsnTest.py.

# Test that we can objdump all variants of the `f32v2mac` instruction
# declared in Isa.xml.

# CHECK: 80 00 00 5a f32v2mac $a0:1, $a0:1
.int 0x5a000080

# CHECK: 80 20 00 5a f32v2mac $a0:1, $a2:3
.int 0x5a002080

# CHECK: 80 40 00 5a f32v2mac $a0:1, $a4:5
.int 0x5a004080

# CHECK: 80 60 00 5a f32v2mac $a0:1, $a6:7
.int 0x5a006080

# CHECK: 80 80 00 5a f32v2mac $a0:1, $a8:9
.int 0x5a008080

# CHECK: 80 a0 00 5a f32v2mac $a0:1, $a10:11
.int 0x5a00a080

# CHECK: 80 c0 00 5a f32v2mac $a0:1, $a12:13
.int 0x5a00c080

# CHECK: 80 e0 00 5a f32v2mac $a0:1, $a14:15
.int 0x5a00e080

# CHECK: 80 00 20 5a f32v2mac $a2:3, $a0:1
.int 0x5a200080

# CHECK: 80 20 20 5a f32v2mac $a2:3, $a2:3
.int 0x5a202080

# CHECK: 80 40 20 5a f32v2mac $a2:3, $a4:5
.int 0x5a204080

# CHECK: 80 60 20 5a f32v2mac $a2:3, $a6:7
.int 0x5a206080

# CHECK: 80 80 20 5a f32v2mac $a2:3, $a8:9
.int 0x5a208080

# CHECK: 80 a0 20 5a f32v2mac $a2:3, $a10:11
.int 0x5a20a080

# CHECK: 80 c0 20 5a f32v2mac $a2:3, $a12:13
.int 0x5a20c080

# CHECK: 80 e0 20 5a f32v2mac $a2:3, $a14:15
.int 0x5a20e080

# CHECK: 80 00 40 5a f32v2mac $a4:5, $a0:1
.int 0x5a400080

# CHECK: 80 20 40 5a f32v2mac $a4:5, $a2:3
.int 0x5a402080

# CHECK: 80 40 40 5a f32v2mac $a4:5, $a4:5
.int 0x5a404080

# CHECK: 80 60 40 5a f32v2mac $a4:5, $a6:7
.int 0x5a406080

# CHECK: 80 80 40 5a f32v2mac $a4:5, $a8:9
.int 0x5a408080

# CHECK: 80 a0 40 5a f32v2mac $a4:5, $a10:11
.int 0x5a40a080

# CHECK: 80 c0 40 5a f32v2mac $a4:5, $a12:13
.int 0x5a40c080

# CHECK: 80 e0 40 5a f32v2mac $a4:5, $a14:15
.int 0x5a40e080

# CHECK: 80 00 60 5a f32v2mac $a6:7, $a0:1
.int 0x5a600080

# CHECK: 80 20 60 5a f32v2mac $a6:7, $a2:3
.int 0x5a602080

# CHECK: 80 40 60 5a f32v2mac $a6:7, $a4:5
.int 0x5a604080

# CHECK: 80 60 60 5a f32v2mac $a6:7, $a6:7
.int 0x5a606080

# CHECK: 80 80 60 5a f32v2mac $a6:7, $a8:9
.int 0x5a608080

# CHECK: 80 a0 60 5a f32v2mac $a6:7, $a10:11
.int 0x5a60a080

# CHECK: 80 c0 60 5a f32v2mac $a6:7, $a12:13
.int 0x5a60c080

# CHECK: 80 e0 60 5a f32v2mac $a6:7, $a14:15
.int 0x5a60e080

# CHECK: 80 00 80 5a f32v2mac $a8:9, $a0:1
.int 0x5a800080

# CHECK: 80 20 80 5a f32v2mac $a8:9, $a2:3
.int 0x5a802080

# CHECK: 80 40 80 5a f32v2mac $a8:9, $a4:5
.int 0x5a804080

# CHECK: 80 60 80 5a f32v2mac $a8:9, $a6:7
.int 0x5a806080

# CHECK: 80 80 80 5a f32v2mac $a8:9, $a8:9
.int 0x5a808080

# CHECK: 80 a0 80 5a f32v2mac $a8:9, $a10:11
.int 0x5a80a080

# CHECK: 80 c0 80 5a f32v2mac $a8:9, $a12:13
.int 0x5a80c080

# CHECK: 80 e0 80 5a f32v2mac $a8:9, $a14:15
.int 0x5a80e080

# CHECK: 80 00 a0 5a f32v2mac $a10:11, $a0:1
.int 0x5aa00080

# CHECK: 80 20 a0 5a f32v2mac $a10:11, $a2:3
.int 0x5aa02080

# CHECK: 80 40 a0 5a f32v2mac $a10:11, $a4:5
.int 0x5aa04080

# CHECK: 80 60 a0 5a f32v2mac $a10:11, $a6:7
.int 0x5aa06080

# CHECK: 80 80 a0 5a f32v2mac $a10:11, $a8:9
.int 0x5aa08080

# CHECK: 80 a0 a0 5a f32v2mac $a10:11, $a10:11
.int 0x5aa0a080

# CHECK: 80 c0 a0 5a f32v2mac $a10:11, $a12:13
.int 0x5aa0c080

# CHECK: 80 e0 a0 5a f32v2mac $a10:11, $a14:15
.int 0x5aa0e080

# CHECK: 80 00 c0 5a f32v2mac $a12:13, $a0:1
.int 0x5ac00080

# CHECK: 80 20 c0 5a f32v2mac $a12:13, $a2:3
.int 0x5ac02080

# CHECK: 80 40 c0 5a f32v2mac $a12:13, $a4:5
.int 0x5ac04080

# CHECK: 80 60 c0 5a f32v2mac $a12:13, $a6:7
.int 0x5ac06080

# CHECK: 80 80 c0 5a f32v2mac $a12:13, $a8:9
.int 0x5ac08080

# CHECK: 80 a0 c0 5a f32v2mac $a12:13, $a10:11
.int 0x5ac0a080

# CHECK: 80 c0 c0 5a f32v2mac $a12:13, $a12:13
.int 0x5ac0c080

# CHECK: 80 e0 c0 5a f32v2mac $a12:13, $a14:15
.int 0x5ac0e080

# CHECK: 80 00 e0 5a f32v2mac $a14:15, $a0:1
.int 0x5ae00080

# CHECK: 80 20 e0 5a f32v2mac $a14:15, $a2:3
.int 0x5ae02080

# CHECK: 80 40 e0 5a f32v2mac $a14:15, $a4:5
.int 0x5ae04080

# CHECK: 80 60 e0 5a f32v2mac $a14:15, $a6:7
.int 0x5ae06080

# CHECK: 80 80 e0 5a f32v2mac $a14:15, $a8:9
.int 0x5ae08080

# CHECK: 80 a0 e0 5a f32v2mac $a14:15, $a10:11
.int 0x5ae0a080

# CHECK: 80 c0 e0 5a f32v2mac $a14:15, $a12:13
.int 0x5ae0c080

# CHECK: 80 e0 e0 5a f32v2mac $a14:15, $a14:15
.int 0x5ae0e080

