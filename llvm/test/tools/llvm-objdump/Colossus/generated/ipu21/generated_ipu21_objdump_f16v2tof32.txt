# RUN: llvm-mc %s -filetype=obj  -mattr=+ipu21 | \
# RUN: llvm-objdump -d --mcpu=ipu21 - | FileCheck %s

# This file is auto-generated. Do not edit.
# Generated by GenerateInsnTest.py.

# Test that we can objdump all variants of the `f16v2tof32` instruction
# declared in Isa.xml.

# CHECK: 00 14 00 52 f16v2tof32 $a0:1, $a0
.int 0x52001400

# CHECK: 00 14 10 52 f16v2tof32 $a0:1, $a1
.int 0x52101400

# CHECK: 00 14 20 52 f16v2tof32 $a0:1, $a2
.int 0x52201400

# CHECK: 00 14 30 52 f16v2tof32 $a0:1, $a3
.int 0x52301400

# CHECK: 00 14 40 52 f16v2tof32 $a0:1, $a4
.int 0x52401400

# CHECK: 00 14 50 52 f16v2tof32 $a0:1, $a5
.int 0x52501400

# CHECK: 00 14 60 52 f16v2tof32 $a0:1, $a6
.int 0x52601400

# CHECK: 00 14 70 52 f16v2tof32 $a0:1, $a7
.int 0x52701400

# CHECK: 00 14 80 52 f16v2tof32 $a0:1, $a8
.int 0x52801400

# CHECK: 00 14 90 52 f16v2tof32 $a0:1, $a9
.int 0x52901400

# CHECK: 00 14 a0 52 f16v2tof32 $a0:1, $a10
.int 0x52a01400

# CHECK: 00 14 b0 52 f16v2tof32 $a0:1, $a11
.int 0x52b01400

# CHECK: 00 14 c0 52 f16v2tof32 $a0:1, $a12
.int 0x52c01400

# CHECK: 00 14 d0 52 f16v2tof32 $a0:1, $a13
.int 0x52d01400

# CHECK: 00 14 e0 52 f16v2tof32 $a0:1, $a14
.int 0x52e01400

# CHECK: 00 14 f0 52 f16v2tof32 $a0:1, $a15
.int 0x52f01400

# CHECK: 20 14 00 52 f16v2tof32 $a2:3, $a0
.int 0x52001420

# CHECK: 20 14 10 52 f16v2tof32 $a2:3, $a1
.int 0x52101420

# CHECK: 20 14 20 52 f16v2tof32 $a2:3, $a2
.int 0x52201420

# CHECK: 20 14 30 52 f16v2tof32 $a2:3, $a3
.int 0x52301420

# CHECK: 20 14 40 52 f16v2tof32 $a2:3, $a4
.int 0x52401420

# CHECK: 20 14 50 52 f16v2tof32 $a2:3, $a5
.int 0x52501420

# CHECK: 20 14 60 52 f16v2tof32 $a2:3, $a6
.int 0x52601420

# CHECK: 20 14 70 52 f16v2tof32 $a2:3, $a7
.int 0x52701420

# CHECK: 20 14 80 52 f16v2tof32 $a2:3, $a8
.int 0x52801420

# CHECK: 20 14 90 52 f16v2tof32 $a2:3, $a9
.int 0x52901420

# CHECK: 20 14 a0 52 f16v2tof32 $a2:3, $a10
.int 0x52a01420

# CHECK: 20 14 b0 52 f16v2tof32 $a2:3, $a11
.int 0x52b01420

# CHECK: 20 14 c0 52 f16v2tof32 $a2:3, $a12
.int 0x52c01420

# CHECK: 20 14 d0 52 f16v2tof32 $a2:3, $a13
.int 0x52d01420

# CHECK: 20 14 e0 52 f16v2tof32 $a2:3, $a14
.int 0x52e01420

# CHECK: 20 14 f0 52 f16v2tof32 $a2:3, $a15
.int 0x52f01420

# CHECK: 40 14 00 52 f16v2tof32 $a4:5, $a0
.int 0x52001440

# CHECK: 40 14 10 52 f16v2tof32 $a4:5, $a1
.int 0x52101440

# CHECK: 40 14 20 52 f16v2tof32 $a4:5, $a2
.int 0x52201440

# CHECK: 40 14 30 52 f16v2tof32 $a4:5, $a3
.int 0x52301440

# CHECK: 40 14 40 52 f16v2tof32 $a4:5, $a4
.int 0x52401440

# CHECK: 40 14 50 52 f16v2tof32 $a4:5, $a5
.int 0x52501440

# CHECK: 40 14 60 52 f16v2tof32 $a4:5, $a6
.int 0x52601440

# CHECK: 40 14 70 52 f16v2tof32 $a4:5, $a7
.int 0x52701440

# CHECK: 40 14 80 52 f16v2tof32 $a4:5, $a8
.int 0x52801440

# CHECK: 40 14 90 52 f16v2tof32 $a4:5, $a9
.int 0x52901440

# CHECK: 40 14 a0 52 f16v2tof32 $a4:5, $a10
.int 0x52a01440

# CHECK: 40 14 b0 52 f16v2tof32 $a4:5, $a11
.int 0x52b01440

# CHECK: 40 14 c0 52 f16v2tof32 $a4:5, $a12
.int 0x52c01440

# CHECK: 40 14 d0 52 f16v2tof32 $a4:5, $a13
.int 0x52d01440

# CHECK: 40 14 e0 52 f16v2tof32 $a4:5, $a14
.int 0x52e01440

# CHECK: 40 14 f0 52 f16v2tof32 $a4:5, $a15
.int 0x52f01440

# CHECK: 60 14 00 52 f16v2tof32 $a6:7, $a0
.int 0x52001460

# CHECK: 60 14 10 52 f16v2tof32 $a6:7, $a1
.int 0x52101460

# CHECK: 60 14 20 52 f16v2tof32 $a6:7, $a2
.int 0x52201460

# CHECK: 60 14 30 52 f16v2tof32 $a6:7, $a3
.int 0x52301460

# CHECK: 60 14 40 52 f16v2tof32 $a6:7, $a4
.int 0x52401460

# CHECK: 60 14 50 52 f16v2tof32 $a6:7, $a5
.int 0x52501460

# CHECK: 60 14 60 52 f16v2tof32 $a6:7, $a6
.int 0x52601460

# CHECK: 60 14 70 52 f16v2tof32 $a6:7, $a7
.int 0x52701460

# CHECK: 60 14 80 52 f16v2tof32 $a6:7, $a8
.int 0x52801460

# CHECK: 60 14 90 52 f16v2tof32 $a6:7, $a9
.int 0x52901460

# CHECK: 60 14 a0 52 f16v2tof32 $a6:7, $a10
.int 0x52a01460

# CHECK: 60 14 b0 52 f16v2tof32 $a6:7, $a11
.int 0x52b01460

# CHECK: 60 14 c0 52 f16v2tof32 $a6:7, $a12
.int 0x52c01460

# CHECK: 60 14 d0 52 f16v2tof32 $a6:7, $a13
.int 0x52d01460

# CHECK: 60 14 e0 52 f16v2tof32 $a6:7, $a14
.int 0x52e01460

# CHECK: 60 14 f0 52 f16v2tof32 $a6:7, $a15
.int 0x52f01460

# CHECK: 80 14 00 52 f16v2tof32 $a8:9, $a0
.int 0x52001480

# CHECK: 80 14 10 52 f16v2tof32 $a8:9, $a1
.int 0x52101480

# CHECK: 80 14 20 52 f16v2tof32 $a8:9, $a2
.int 0x52201480

# CHECK: 80 14 30 52 f16v2tof32 $a8:9, $a3
.int 0x52301480

# CHECK: 80 14 40 52 f16v2tof32 $a8:9, $a4
.int 0x52401480

# CHECK: 80 14 50 52 f16v2tof32 $a8:9, $a5
.int 0x52501480

# CHECK: 80 14 60 52 f16v2tof32 $a8:9, $a6
.int 0x52601480

# CHECK: 80 14 70 52 f16v2tof32 $a8:9, $a7
.int 0x52701480

# CHECK: 80 14 80 52 f16v2tof32 $a8:9, $a8
.int 0x52801480

# CHECK: 80 14 90 52 f16v2tof32 $a8:9, $a9
.int 0x52901480

# CHECK: 80 14 a0 52 f16v2tof32 $a8:9, $a10
.int 0x52a01480

# CHECK: 80 14 b0 52 f16v2tof32 $a8:9, $a11
.int 0x52b01480

# CHECK: 80 14 c0 52 f16v2tof32 $a8:9, $a12
.int 0x52c01480

# CHECK: 80 14 d0 52 f16v2tof32 $a8:9, $a13
.int 0x52d01480

# CHECK: 80 14 e0 52 f16v2tof32 $a8:9, $a14
.int 0x52e01480

# CHECK: 80 14 f0 52 f16v2tof32 $a8:9, $a15
.int 0x52f01480

# CHECK: a0 14 00 52 f16v2tof32 $a10:11, $a0
.int 0x520014a0

# CHECK: a0 14 10 52 f16v2tof32 $a10:11, $a1
.int 0x521014a0

# CHECK: a0 14 20 52 f16v2tof32 $a10:11, $a2
.int 0x522014a0

# CHECK: a0 14 30 52 f16v2tof32 $a10:11, $a3
.int 0x523014a0

# CHECK: a0 14 40 52 f16v2tof32 $a10:11, $a4
.int 0x524014a0

# CHECK: a0 14 50 52 f16v2tof32 $a10:11, $a5
.int 0x525014a0

# CHECK: a0 14 60 52 f16v2tof32 $a10:11, $a6
.int 0x526014a0

# CHECK: a0 14 70 52 f16v2tof32 $a10:11, $a7
.int 0x527014a0

# CHECK: a0 14 80 52 f16v2tof32 $a10:11, $a8
.int 0x528014a0

# CHECK: a0 14 90 52 f16v2tof32 $a10:11, $a9
.int 0x529014a0

# CHECK: a0 14 a0 52 f16v2tof32 $a10:11, $a10
.int 0x52a014a0

# CHECK: a0 14 b0 52 f16v2tof32 $a10:11, $a11
.int 0x52b014a0

# CHECK: a0 14 c0 52 f16v2tof32 $a10:11, $a12
.int 0x52c014a0

# CHECK: a0 14 d0 52 f16v2tof32 $a10:11, $a13
.int 0x52d014a0

# CHECK: a0 14 e0 52 f16v2tof32 $a10:11, $a14
.int 0x52e014a0

# CHECK: a0 14 f0 52 f16v2tof32 $a10:11, $a15
.int 0x52f014a0

# CHECK: c0 14 00 52 f16v2tof32 $a12:13, $a0
.int 0x520014c0

# CHECK: c0 14 10 52 f16v2tof32 $a12:13, $a1
.int 0x521014c0

# CHECK: c0 14 20 52 f16v2tof32 $a12:13, $a2
.int 0x522014c0

# CHECK: c0 14 30 52 f16v2tof32 $a12:13, $a3
.int 0x523014c0

# CHECK: c0 14 40 52 f16v2tof32 $a12:13, $a4
.int 0x524014c0

# CHECK: c0 14 50 52 f16v2tof32 $a12:13, $a5
.int 0x525014c0

# CHECK: c0 14 60 52 f16v2tof32 $a12:13, $a6
.int 0x526014c0

# CHECK: c0 14 70 52 f16v2tof32 $a12:13, $a7
.int 0x527014c0

# CHECK: c0 14 80 52 f16v2tof32 $a12:13, $a8
.int 0x528014c0

# CHECK: c0 14 90 52 f16v2tof32 $a12:13, $a9
.int 0x529014c0

# CHECK: c0 14 a0 52 f16v2tof32 $a12:13, $a10
.int 0x52a014c0

# CHECK: c0 14 b0 52 f16v2tof32 $a12:13, $a11
.int 0x52b014c0

# CHECK: c0 14 c0 52 f16v2tof32 $a12:13, $a12
.int 0x52c014c0

# CHECK: c0 14 d0 52 f16v2tof32 $a12:13, $a13
.int 0x52d014c0

# CHECK: c0 14 e0 52 f16v2tof32 $a12:13, $a14
.int 0x52e014c0

# CHECK: c0 14 f0 52 f16v2tof32 $a12:13, $a15
.int 0x52f014c0

# CHECK: e0 14 00 52 f16v2tof32 $a14:15, $a0
.int 0x520014e0

# CHECK: e0 14 10 52 f16v2tof32 $a14:15, $a1
.int 0x521014e0

# CHECK: e0 14 20 52 f16v2tof32 $a14:15, $a2
.int 0x522014e0

# CHECK: e0 14 30 52 f16v2tof32 $a14:15, $a3
.int 0x523014e0

# CHECK: e0 14 40 52 f16v2tof32 $a14:15, $a4
.int 0x524014e0

# CHECK: e0 14 50 52 f16v2tof32 $a14:15, $a5
.int 0x525014e0

# CHECK: e0 14 60 52 f16v2tof32 $a14:15, $a6
.int 0x526014e0

# CHECK: e0 14 70 52 f16v2tof32 $a14:15, $a7
.int 0x527014e0

# CHECK: e0 14 80 52 f16v2tof32 $a14:15, $a8
.int 0x528014e0

# CHECK: e0 14 90 52 f16v2tof32 $a14:15, $a9
.int 0x529014e0

# CHECK: e0 14 a0 52 f16v2tof32 $a14:15, $a10
.int 0x52a014e0

# CHECK: e0 14 b0 52 f16v2tof32 $a14:15, $a11
.int 0x52b014e0

# CHECK: e0 14 c0 52 f16v2tof32 $a14:15, $a12
.int 0x52c014e0

# CHECK: e0 14 d0 52 f16v2tof32 $a14:15, $a13
.int 0x52d014e0

# CHECK: e0 14 e0 52 f16v2tof32 $a14:15, $a14
.int 0x52e014e0

# CHECK: e0 14 f0 52 f16v2tof32 $a14:15, $a15
.int 0x52f014e0

